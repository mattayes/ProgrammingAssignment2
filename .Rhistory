a
clean
dim(clean)
x
ot <- clean[, "Ozone"] > 31
rm(a)
a <- clean[ot, ]
tt <- a[, "Temp"] > 90
b <- a[tt, ]
mean(b[, "Solar.R"])
m6 <- clean[x, "Month"] == 6
m6 <- clean[, "Month"] == 6
c <- clean[m6, ]
mean(c[, "Temp"])
head(clean)
m6 <- clean[, "Month"] == 6
m6
clean
c
mean(c[, "Temp"])
temp <= c[, "Temp"]
d <- clean[m6, ]
rm(c)
mean(d[, "Temp"])
m8a <- x[, "Month"] == 6
mean(x[m8a, "Temp"])
m5 <- x[, "Month"] == 5
?max
max(x[m5, "Ozone"])
m5 <- clean[, "Month"] == 5
max(x[m5, "Ozone"])
m5
e <- x[m5, ]
max(e[, "Ozone"])
e
clean
m5 <- clean[, "Month"] == 5
m5
maxi <- clean[m5, ]
maxi
max(maxi[, "Ozone"])
man <- 1:4
woman <- 2
man + woman
top <- c(3, 5, 1, 10, 12, 6)
top[x %in% 1:5] <- 0
top
top[top %in% 1:5] <0
top[top %in% 1:5] <- 0
top
hop <- 4
class(hop)
man <- 1:4
woman <- 2:3
man + woman
R.version.string
install.packages("swirl")
library(swirl)
swirl()
library(swirl)
swirl()
5 + 7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
1:20
play()
1 : 20
nxt()
pi:10
15:1
?`:`
seq(1, 20)
seq(0, 10, by=0.5)
seq(5, 10, length=30)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
play()
my_div < 3 & my_seq > 6
nxt()
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "mattayes")
my_name
paste(my_name, collapse=" ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
play()
?LETTERS
letters
month.abb
nxt()
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
play()
?rep
rep(x, times = 1, length.out = NA, each = 1)
rep(x, times = 4, length.out = NA, each = 2)
nxt()
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0 / 0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3, 5, 7)]
x[0]
x[3000]
play()
x[!c(2, 10)]
nxt()
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
head(flags)
dim(flags)
play()
viewinfo(flags)
viewinfo()
nxt()
class(flags)
cls_list <- lapply(flags, class)
clas_list
cls(list)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flags_colors <- flags[, 11:17]
flag_colors <- flags[, 11:17]
play()
rm(flags_colors)
nxt()
head(flag_colors)
lapply(flags_colors, sum)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
length(unique_vals)
sapply(unique_vals, length)
sapply(flags, unique)
lappy(unique_vals, function(elem) elem[2])
lapply(unique_vals, function(elem) elem[2])
swirl()
rm()
rm(list = ls())
library(swirl)
?InstallCourses
?library
detach("package:swirl", unload=TRUE)
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
detach("package:swirl", unload=TRUE)
?install.packages
?available.packages
available.packages()
clear()
detach("package:stats", unload=TRUE)
library("stats", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
detach("stats")
detach("package:stats", unload = T)
library("stats")
detach("package:stats", unload=TRUE)
library("stats", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
?split
require(stats); require(graphics)
n <- 10
nn <- 100
g <- factor(round(n * runif(n * nn)))
x <- rnorm(n * nn) + sqrt(as.numeric(g))
n
g
?runif
x
head(x)
xg <- split(x, g)
head(xg)
g
boxplot(xg, col = "lavender", notch = TRUE, varwidth = TRUE)
sapply(xg, length)
sapply(xg, mean)
rm(list = ls())
str(apply)
str(plot)
plot
Method(plot)
?method
??method
?par
a <- vector()
?dim
dim(vector) <- 1
dim(vector) <- c(1, 2)
dim(a) <- 1
dim(a) <- c(1, 1)
a
dim(a) <- c(3, 4)
a <- 1:12
a <- 5
class(a)
dim(a) <- c(1, 2)
dim(a) <- c(1, 1
)
a
class(a)
dim(a) <- NULL
a
class(a)
as.numeric
as.matrix
mean
?mean
?gl
head(airquality)
s <- split(airquality, airquality$Month)
s
m <- lapply(s, function(x) colMeans(x, c(, 1:3)))
m <- lapply(s, function(x) colMeans(x[, c(, 1:3)]))
m <- lapply(s, function(x) colMeans(x[, 1:3]))
m
p <- sapply(s, function(x) colMeans(x[, 1:3]))
p
p <- sapply(s, function(x) colMeans(x[, 1:3]), is.rm = TRUE)
p <- sapply(s, function(x) colMeans(x[, 1:3], is.rm = TRUE))
p <- sapply(s, function(x) colMeans(x[, 1:3], rm.na = TRUE))
p <- sapply(s, function(x) colMeans(x[, 1:3], na.rm = TRUE))
?interaction
noise <- function(n, mean, sd) {
rnorm(n, mean, sd)
}
a <- noise(5, 1, 2)
rnorm(5, mean = 1, sd = 2)
rnorm(5, 1, 2)
str(a)
str(noise)
str(rnorm)
mapply(noise, 1:5, 1:5, 2, SIMPLIFY = TRUE)
log(-1)
?invisibile
?invisible
printmessage <- function(x) {}
printmessage <- function(x) {
if (x > 0)
print ("x is greater than zero")
else
print("x is less than or equal to zero")
invisible(x)
}
printmessage(10)
print(printmessage(10))
insisible(10)
invisible(10)
printmessage(NA)
source('~/.active-rstudio-document')
printmessage2(log(-1))
x <- log(-1)
printmessage2(x)
x
x
x
x
x
str(printmessage)
printmessage
clip
?clip
a <- printmessage
a
source('~/.active-rstudio-document')
rm(a)
rm(x)
?cat
cat(printmessage, printmessage2)
cat(2)
cat(2, 5,"apple")
cast(2, 5, apple)
cat(2, 5, apple)
debug(lm)
lm(y ~ x)
lm(y ~ x)
debug()
debug
options(error = recover)
read.csv("nosuchfile")
data(iris)
library(datasets)
data(iris)
?iris
head(iris)
a <- split(iris, iris$Species)
head(a)
b <- a$virginica
b
str(colMean)
str(colMeans)
colMeans(b, na.rm = T)
class(b)
?colMenas
?colMeans
mean(b$Sepal.Length)
class(iris)
colMeans(iris)
?apply
apply(iris[, 1:4], 2, mean)
apply(iris, 2, mean)
?data
data(mtcars)
?mtcars
?mean
?tapply
mean(mtcars$mpg, mtcars$cyl)
sapply(mtcars, cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))
mycars$cyl
mtcars$cyl
?with
tapply(mtcars$mpg, mtcars$cyl, mean)
head(mtcars)
a <- with(mtcars, tapply(hp, cyl, mean))
a$4
a
a[, 1]
a[4]
a[1]
a["4"]
a$"4"
abs(a[1] - a[8])
a[1] - a[8]
a[1]
class(a)
dim(a)
dim(a) <- NULL
a
abs(a[1] - a[3])
?`<-`
?`<<-`
makeVector
library(swril)
library("swirl")
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags(, 11:17)
flag_colors <- flags[], 11:17]
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
sapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
rownames(shape_mat) <- c("Min", "Max")
shape_mat
play()
rownames(shape_mat) <- c("Min", "Max")
shape_mat
nxt()
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem elem[2]))
lapply(unique_vals, function(elem) elem[2])
exit(0)
exit()
end()
ext()
help()
close()
library("swirl")
swirl()
?ok
?viewinfo
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
?tbale
?table
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
rm(flags)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
detach("package:swirl", unload=TRUE)
rm(list = ls())
setwd(~/git/ProgrammingAssignment2)
setwd(~/git/ProgrammingAssignment2)
setwd("~/git/ProgrammingAssignment2")
ls
ls()
list.files()
?matrix
a <- matrix()
a
source('~/git/ProgrammingAssignment2/cachematrix.R')
example <- matrix(c(5, 10, 23, 18), nrow = 2)
example
makeCacheMatrix(example)
cacheSolve(example)
makeCacheMatrix
cm <- makeCacheMatrix(example)
cacheSolve(cm)
source('~/git/ProgrammingAssignment2/cachematrix.R')
cacheSolve(cm)
cacheSolve(cm)
